/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.github.ajablonski

import com.google.common.testing.TestLogHandler
import io.mockk.every
import io.mockk.mockkStatic
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.Test
import java.time.Instant
import java.util.*
import java.util.logging.Logger

@Suppress("UnstableApiUsage")
class FetchStaticGtfsDataTest {
    private lateinit var messageHandler: FetchStaticGtfsData


    @BeforeEach
    fun setUp() {
        messageHandler = FetchStaticGtfsData()
        logger.addHandler(LOG_HANDLER)
        LOG_HANDLER.clear()
    }

    @Test
    fun shouldLogResult() {
        mockkStatic(Instant::class)

        every { Instant.now() }.returns(Instant.parse("2022-04-04T22:14:00Z"))

        val data = Base64.getEncoder().encodeToString(
            """{
                "trigger": "fetch-gtfs-data"
            }""".trimIndent().toByteArray(Charsets.UTF_8)
        )
        val message = PubSubMessage(data, "messageId", "2022-01-01T00:00:00Z", emptyMap())
        messageHandler.accept(message, null)

        val logMessage = LOG_HANDLER.storedLogRecords[0].message
        assertThat(logMessage).isEqualTo("Attempting to fetch data at 2022-04-04T22:14:00Z")
    }

    companion object {
        private val logger = Logger.getLogger(FetchStaticGtfsData::class.qualifiedName)
        private val LOG_HANDLER = TestLogHandler()
    }
}
